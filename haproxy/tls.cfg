# Get certificate from CA
# 1. Build key
#   openssl genrsa -out haproxy/tls/private-key.key 2048
# 2. Build csr from key for requesting certificate
#   openssl  req -new -key haproxy/tls/private-key.key -out haproxy/tls/haproxy.csr
# 3. Get certificate from CAT
#   openssl x509 -req -in haproxy/tls/haproxy.csr \
#     -CA src/shared/tls/ca-certificate.cert \
#     -CAkey src/intermediate-ca/ca-private-key.key \
#     -out haproxy/tls/certificate.cert
#
# Build pem formatted crt
#   cat haproxy/tls/certificate.cert haproxy/tls/private-key.key > haproxy/tls/combined.pem
#
# Test
# 1. `haproxy -f haproxy/tls.cfg`
# 2. `PORT=3001 npx ts-node src/web-api/consumer-http-basic.ts`
# 3. `npx ts-node src/recipe-api/producer-http-basic.ts`
# 4. curl --insecure https://localhost:3000/
defaults
  mode http
  timeout connect 5000ms
  timeout client 50000ms
  timeout server 50000ms

# set global Diffie-Hellman key size parameter
global
  tune.ssl.default-dh-param 2048

# bind pem formatted TLS information to frontend
frontend inbound
  bind localhost:3000 ssl crt haproxy/tls/combined.pem ca-file src/shared/tls/ca-certificate.cert
  default_backend web-api

backend web-api
  server web-api-1 localhost:3001
